# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from backendserver import backend_pb2 as backendserver_dot_backend__pb2


class CameraServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.TakePicture = channel.unary_unary(
        '/backendserver.CameraService/TakePicture',
        request_serializer=backendserver_dot_backend__pb2.EmptyRequest.SerializeToString,
        response_deserializer=backendserver_dot_backend__pb2.TakePictureReply.FromString,
        )
    self.StartTimelapse = channel.unary_unary(
        '/backendserver.CameraService/StartTimelapse',
        request_serializer=backendserver_dot_backend__pb2.EmptyRequest.SerializeToString,
        response_deserializer=backendserver_dot_backend__pb2.BasicReply.FromString,
        )
    self.StopTimelapse = channel.unary_unary(
        '/backendserver.CameraService/StopTimelapse',
        request_serializer=backendserver_dot_backend__pb2.EmptyRequest.SerializeToString,
        response_deserializer=backendserver_dot_backend__pb2.BasicReply.FromString,
        )
    self.ToggleWebStream = channel.unary_unary(
        '/backendserver.CameraService/ToggleWebStream',
        request_serializer=backendserver_dot_backend__pb2.ToggleWebStreamRequest.SerializeToString,
        response_deserializer=backendserver_dot_backend__pb2.ToggleWebStreamReply.FromString,
        )
    self.StartMotionDetection = channel.unary_unary(
        '/backendserver.CameraService/StartMotionDetection',
        request_serializer=backendserver_dot_backend__pb2.EmptyRequest.SerializeToString,
        response_deserializer=backendserver_dot_backend__pb2.BasicReply.FromString,
        )
    self.StopMotionDetection = channel.unary_unary(
        '/backendserver.CameraService/StopMotionDetection',
        request_serializer=backendserver_dot_backend__pb2.EmptyRequest.SerializeToString,
        response_deserializer=backendserver_dot_backend__pb2.BasicReply.FromString,
        )
    self.GetState = channel.unary_unary(
        '/backendserver.CameraService/GetState',
        request_serializer=backendserver_dot_backend__pb2.EmptyRequest.SerializeToString,
        response_deserializer=backendserver_dot_backend__pb2.GetStateReply.FromString,
        )
    self.SubscribeNotifications = channel.unary_stream(
        '/backendserver.CameraService/SubscribeNotifications',
        request_serializer=backendserver_dot_backend__pb2.EmptyRequest.SerializeToString,
        response_deserializer=backendserver_dot_backend__pb2.Notification.FromString,
        )


class CameraServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def TakePicture(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartTimelapse(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopTimelapse(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ToggleWebStream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartMotionDetection(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopMotionDetection(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetState(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscribeNotifications(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CameraServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'TakePicture': grpc.unary_unary_rpc_method_handler(
          servicer.TakePicture,
          request_deserializer=backendserver_dot_backend__pb2.EmptyRequest.FromString,
          response_serializer=backendserver_dot_backend__pb2.TakePictureReply.SerializeToString,
      ),
      'StartTimelapse': grpc.unary_unary_rpc_method_handler(
          servicer.StartTimelapse,
          request_deserializer=backendserver_dot_backend__pb2.EmptyRequest.FromString,
          response_serializer=backendserver_dot_backend__pb2.BasicReply.SerializeToString,
      ),
      'StopTimelapse': grpc.unary_unary_rpc_method_handler(
          servicer.StopTimelapse,
          request_deserializer=backendserver_dot_backend__pb2.EmptyRequest.FromString,
          response_serializer=backendserver_dot_backend__pb2.BasicReply.SerializeToString,
      ),
      'ToggleWebStream': grpc.unary_unary_rpc_method_handler(
          servicer.ToggleWebStream,
          request_deserializer=backendserver_dot_backend__pb2.ToggleWebStreamRequest.FromString,
          response_serializer=backendserver_dot_backend__pb2.ToggleWebStreamReply.SerializeToString,
      ),
      'StartMotionDetection': grpc.unary_unary_rpc_method_handler(
          servicer.StartMotionDetection,
          request_deserializer=backendserver_dot_backend__pb2.EmptyRequest.FromString,
          response_serializer=backendserver_dot_backend__pb2.BasicReply.SerializeToString,
      ),
      'StopMotionDetection': grpc.unary_unary_rpc_method_handler(
          servicer.StopMotionDetection,
          request_deserializer=backendserver_dot_backend__pb2.EmptyRequest.FromString,
          response_serializer=backendserver_dot_backend__pb2.BasicReply.SerializeToString,
      ),
      'GetState': grpc.unary_unary_rpc_method_handler(
          servicer.GetState,
          request_deserializer=backendserver_dot_backend__pb2.EmptyRequest.FromString,
          response_serializer=backendserver_dot_backend__pb2.GetStateReply.SerializeToString,
      ),
      'SubscribeNotifications': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeNotifications,
          request_deserializer=backendserver_dot_backend__pb2.EmptyRequest.FromString,
          response_serializer=backendserver_dot_backend__pb2.Notification.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'backendserver.CameraService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))

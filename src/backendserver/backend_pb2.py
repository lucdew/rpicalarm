# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: backendserver/backend.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='backendserver/backend.proto',
  package='backendserver',
  syntax='proto3',
  serialized_pb=_b('\n\x1b\x62\x61\x63kendserver/backend.proto\x12\rbackendserver\"/\n\x0c\x43\x61meraResult\x12\x0e\n\x06status\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"\x0e\n\x0c\x45mptyRequest\"9\n\nBasicReply\x12+\n\x06result\x18\x01 \x01(\x0b\x32\x1b.backendserver.CameraResult\"P\n\x10TakePictureReply\x12+\n\x06result\x18\x01 \x01(\x0b\x32\x1b.backendserver.CameraResult\x12\x0f\n\x07picture\x18\x02 \x01(\x0c\"%\n\x16ToggleWebStreamRequest\x12\x0b\n\x03url\x18\x01 \x01(\t\"X\n\x14ToggleWebStreamReply\x12+\n\x06result\x18\x01 \x01(\x0b\x32\x1b.backendserver.CameraResult\x12\x13\n\x0bisStreaming\x18\x02 \x01(\x08\"K\n\rGetStateReply\x12+\n\x06result\x18\x01 \x01(\x0b\x32\x1b.backendserver.CameraResult\x12\r\n\x05state\x18\x02 \x01(\t\"/\n\x0cNotification\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\ttimestamp\x18\x02 \x01(\x03\x32\x8a\x05\n\rCameraService\x12K\n\x0bTakePicture\x12\x1b.backendserver.EmptyRequest\x1a\x1f.backendserver.TakePictureReply\x12H\n\x0eStartTimelapse\x12\x1b.backendserver.EmptyRequest\x1a\x19.backendserver.BasicReply\x12G\n\rStopTimelapse\x12\x1b.backendserver.EmptyRequest\x1a\x19.backendserver.BasicReply\x12]\n\x0fToggleWebStream\x12%.backendserver.ToggleWebStreamRequest\x1a#.backendserver.ToggleWebStreamReply\x12N\n\x14StartMotionDetection\x12\x1b.backendserver.EmptyRequest\x1a\x19.backendserver.BasicReply\x12M\n\x13StopMotionDetection\x12\x1b.backendserver.EmptyRequest\x1a\x19.backendserver.BasicReply\x12\x45\n\x08GetState\x12\x1b.backendserver.EmptyRequest\x1a\x1c.backendserver.GetStateReply\x12T\n\x16SubscribeNotifications\x12\x1b.backendserver.EmptyRequest\x1a\x1b.backendserver.Notification0\x01\x62\x06proto3')
)




_CAMERARESULT = _descriptor.Descriptor(
  name='CameraResult',
  full_name='backendserver.CameraResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='backendserver.CameraResult.status', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='backendserver.CameraResult.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=46,
  serialized_end=93,
)


_EMPTYREQUEST = _descriptor.Descriptor(
  name='EmptyRequest',
  full_name='backendserver.EmptyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=95,
  serialized_end=109,
)


_BASICREPLY = _descriptor.Descriptor(
  name='BasicReply',
  full_name='backendserver.BasicReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='backendserver.BasicReply.result', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=111,
  serialized_end=168,
)


_TAKEPICTUREREPLY = _descriptor.Descriptor(
  name='TakePictureReply',
  full_name='backendserver.TakePictureReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='backendserver.TakePictureReply.result', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='picture', full_name='backendserver.TakePictureReply.picture', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=170,
  serialized_end=250,
)


_TOGGLEWEBSTREAMREQUEST = _descriptor.Descriptor(
  name='ToggleWebStreamRequest',
  full_name='backendserver.ToggleWebStreamRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='url', full_name='backendserver.ToggleWebStreamRequest.url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=252,
  serialized_end=289,
)


_TOGGLEWEBSTREAMREPLY = _descriptor.Descriptor(
  name='ToggleWebStreamReply',
  full_name='backendserver.ToggleWebStreamReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='backendserver.ToggleWebStreamReply.result', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='isStreaming', full_name='backendserver.ToggleWebStreamReply.isStreaming', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=291,
  serialized_end=379,
)


_GETSTATEREPLY = _descriptor.Descriptor(
  name='GetStateReply',
  full_name='backendserver.GetStateReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='backendserver.GetStateReply.result', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='state', full_name='backendserver.GetStateReply.state', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=381,
  serialized_end=456,
)


_NOTIFICATION = _descriptor.Descriptor(
  name='Notification',
  full_name='backendserver.Notification',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='backendserver.Notification.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='backendserver.Notification.timestamp', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=458,
  serialized_end=505,
)

_BASICREPLY.fields_by_name['result'].message_type = _CAMERARESULT
_TAKEPICTUREREPLY.fields_by_name['result'].message_type = _CAMERARESULT
_TOGGLEWEBSTREAMREPLY.fields_by_name['result'].message_type = _CAMERARESULT
_GETSTATEREPLY.fields_by_name['result'].message_type = _CAMERARESULT
DESCRIPTOR.message_types_by_name['CameraResult'] = _CAMERARESULT
DESCRIPTOR.message_types_by_name['EmptyRequest'] = _EMPTYREQUEST
DESCRIPTOR.message_types_by_name['BasicReply'] = _BASICREPLY
DESCRIPTOR.message_types_by_name['TakePictureReply'] = _TAKEPICTUREREPLY
DESCRIPTOR.message_types_by_name['ToggleWebStreamRequest'] = _TOGGLEWEBSTREAMREQUEST
DESCRIPTOR.message_types_by_name['ToggleWebStreamReply'] = _TOGGLEWEBSTREAMREPLY
DESCRIPTOR.message_types_by_name['GetStateReply'] = _GETSTATEREPLY
DESCRIPTOR.message_types_by_name['Notification'] = _NOTIFICATION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CameraResult = _reflection.GeneratedProtocolMessageType('CameraResult', (_message.Message,), dict(
  DESCRIPTOR = _CAMERARESULT,
  __module__ = 'backendserver.backend_pb2'
  # @@protoc_insertion_point(class_scope:backendserver.CameraResult)
  ))
_sym_db.RegisterMessage(CameraResult)

EmptyRequest = _reflection.GeneratedProtocolMessageType('EmptyRequest', (_message.Message,), dict(
  DESCRIPTOR = _EMPTYREQUEST,
  __module__ = 'backendserver.backend_pb2'
  # @@protoc_insertion_point(class_scope:backendserver.EmptyRequest)
  ))
_sym_db.RegisterMessage(EmptyRequest)

BasicReply = _reflection.GeneratedProtocolMessageType('BasicReply', (_message.Message,), dict(
  DESCRIPTOR = _BASICREPLY,
  __module__ = 'backendserver.backend_pb2'
  # @@protoc_insertion_point(class_scope:backendserver.BasicReply)
  ))
_sym_db.RegisterMessage(BasicReply)

TakePictureReply = _reflection.GeneratedProtocolMessageType('TakePictureReply', (_message.Message,), dict(
  DESCRIPTOR = _TAKEPICTUREREPLY,
  __module__ = 'backendserver.backend_pb2'
  # @@protoc_insertion_point(class_scope:backendserver.TakePictureReply)
  ))
_sym_db.RegisterMessage(TakePictureReply)

ToggleWebStreamRequest = _reflection.GeneratedProtocolMessageType('ToggleWebStreamRequest', (_message.Message,), dict(
  DESCRIPTOR = _TOGGLEWEBSTREAMREQUEST,
  __module__ = 'backendserver.backend_pb2'
  # @@protoc_insertion_point(class_scope:backendserver.ToggleWebStreamRequest)
  ))
_sym_db.RegisterMessage(ToggleWebStreamRequest)

ToggleWebStreamReply = _reflection.GeneratedProtocolMessageType('ToggleWebStreamReply', (_message.Message,), dict(
  DESCRIPTOR = _TOGGLEWEBSTREAMREPLY,
  __module__ = 'backendserver.backend_pb2'
  # @@protoc_insertion_point(class_scope:backendserver.ToggleWebStreamReply)
  ))
_sym_db.RegisterMessage(ToggleWebStreamReply)

GetStateReply = _reflection.GeneratedProtocolMessageType('GetStateReply', (_message.Message,), dict(
  DESCRIPTOR = _GETSTATEREPLY,
  __module__ = 'backendserver.backend_pb2'
  # @@protoc_insertion_point(class_scope:backendserver.GetStateReply)
  ))
_sym_db.RegisterMessage(GetStateReply)

Notification = _reflection.GeneratedProtocolMessageType('Notification', (_message.Message,), dict(
  DESCRIPTOR = _NOTIFICATION,
  __module__ = 'backendserver.backend_pb2'
  # @@protoc_insertion_point(class_scope:backendserver.Notification)
  ))
_sym_db.RegisterMessage(Notification)



_CAMERASERVICE = _descriptor.ServiceDescriptor(
  name='CameraService',
  full_name='backendserver.CameraService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=508,
  serialized_end=1158,
  methods=[
  _descriptor.MethodDescriptor(
    name='TakePicture',
    full_name='backendserver.CameraService.TakePicture',
    index=0,
    containing_service=None,
    input_type=_EMPTYREQUEST,
    output_type=_TAKEPICTUREREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='StartTimelapse',
    full_name='backendserver.CameraService.StartTimelapse',
    index=1,
    containing_service=None,
    input_type=_EMPTYREQUEST,
    output_type=_BASICREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='StopTimelapse',
    full_name='backendserver.CameraService.StopTimelapse',
    index=2,
    containing_service=None,
    input_type=_EMPTYREQUEST,
    output_type=_BASICREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ToggleWebStream',
    full_name='backendserver.CameraService.ToggleWebStream',
    index=3,
    containing_service=None,
    input_type=_TOGGLEWEBSTREAMREQUEST,
    output_type=_TOGGLEWEBSTREAMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='StartMotionDetection',
    full_name='backendserver.CameraService.StartMotionDetection',
    index=4,
    containing_service=None,
    input_type=_EMPTYREQUEST,
    output_type=_BASICREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='StopMotionDetection',
    full_name='backendserver.CameraService.StopMotionDetection',
    index=5,
    containing_service=None,
    input_type=_EMPTYREQUEST,
    output_type=_BASICREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetState',
    full_name='backendserver.CameraService.GetState',
    index=6,
    containing_service=None,
    input_type=_EMPTYREQUEST,
    output_type=_GETSTATEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SubscribeNotifications',
    full_name='backendserver.CameraService.SubscribeNotifications',
    index=7,
    containing_service=None,
    input_type=_EMPTYREQUEST,
    output_type=_NOTIFICATION,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_CAMERASERVICE)

DESCRIPTOR.services_by_name['CameraService'] = _CAMERASERVICE

# @@protoc_insertion_point(module_scope)
